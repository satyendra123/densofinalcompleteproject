RS485     arduino
Rx    -   11
Tx    -   10
VCC   -   5v
gnd   -   gnd



//EX- it receives the data from all the 6 controller
#include <SoftwareSerial.h>

#define RX_PIN 11
#define TX_PIN 10
#define LED_PIN 13

SoftwareSerial Soft_Serial(RX_PIN, TX_PIN);

String incomingData = "";

void setup() {
  Serial.begin(115200);
  Soft_Serial.begin(9600);

  pinMode(LED_PIN, OUTPUT);
  digitalWrite(LED_PIN, LOW);

  Serial.println("\n\nMaster Ready");
}

void loop() {
  while (Soft_Serial.available()) {
    char receivedChar = Soft_Serial.read();
    incomingData += receivedChar;

    // Check for end delimiter
    if (receivedChar == '|') {
      if (incomingData.endsWith("||FF|")) {
        Serial.println("\n--- Full Message Received ---");
        Serial.println("Raw: " + incomingData);
        parseMessage(incomingData);
        incomingData = "";
      }
    }

    // Prevent garbage buildup
    if (incomingData.length() > 100) {
      incomingData = "";
    }
  }
}

void parseMessage(String msg) {
  // Expected format: |AA||01||PASS||1234561||FF|
  // Split message based on delimiter "||"
  int partIndex = 0;
  String parts[6];

  int fromIndex = 0;
  while (fromIndex < msg.length() && partIndex < 6) {
    int start = msg.indexOf("||", fromIndex);
    if (start == -1) break;

    int end = msg.indexOf("||", start + 2);
    if (end == -1) end = msg.indexOf("||", start + 2); // try again

    parts[partIndex++] = msg.substring(fromIndex, start);
    fromIndex = start + 2;
  }

  // Extract useful info (fallback if parsing is inconsistent)
  if (msg.indexOf("PASS") != -1) {
    int idStart = msg.indexOf("||") + 2;
    int idEnd = msg.indexOf("||", idStart);
    String deviceId = msg.substring(idStart, idEnd);

    int rfidStart = msg.indexOf("||PASS||") + 8;
    int rfidEnd = msg.indexOf("||", rfidStart);
    String rfid = msg.substring(rfidStart, rfidEnd);

    Serial.println("Device ID: " + deviceId);
    Serial.println("RFID: " + rfid);

    // Example action: Turn on LED briefly
    digitalWrite(LED_PIN, HIGH);
    delay(300);
    digitalWrite(LED_PIN, LOW);
  } else {
    Serial.println("Invalid/Unrecognized message.");
  }
}
