#include <SPI.h>
#include <Ethernet.h>
#include <SoftwareSerial.h>

#define RS485_RX 4
#define RS485_TX 5
#define RS485_CONTROL 6

SoftwareSerial rs485(RS485_RX, RS485_TX);

byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED };
IPAddress ip(192, 168, 1, 177);
IPAddress server(192, 168, 1, 100);

EthernetClient client;

String incomingData = "";

void setup() {
  Serial.begin(9600);
  rs485.begin(9600);
  pinMode(RS485_CONTROL, OUTPUT);
  digitalWrite(RS485_CONTROL, LOW);  // Receive mode

  Ethernet.begin(mac, ip);
  delay(1000);
  Serial.println("System ready...");
}

void loop() {
  while (rs485.available()) {
    char c = rs485.read();
    incomingData += c;

    // If we reached the last '|', attempt to process
    if (incomingData.startsWith("|AA") && countPipes(incomingData) == 8 && incomingData.endsWith("|")) {
      Serial.print("Received RS485 Data: ");
      Serial.println(incomingData);

      String rfid = extractRFID(incomingData);
      if (rfid.length() > 0) {
        Serial.print("Extracted RFID: ");
        Serial.println(rfid);
        sendToServer(rfid);
      } else {
        Serial.println("Failed to extract RFID");
      }

      // Reset buffer
      incomingData = "";

      // Clear any remaining data in RS485 buffer
      while (rs485.available()) {
        rs485.read(); // discard
      }
    }
  }
}


int countPipes(String str) {
  int count = 0;
  for (int i = 0; i < str.length(); i++) {
    if (str.charAt(i) == '|') count++;
  }
  return count;
}

// Extracts the fourth field (RFID) using indexOf
String extractRFID(String data) {
  int pos[9];
  int index = 0;
  for (int i = 0; i < data.length() && index < 9; i++) {
    if (data.charAt(i) == '|') {
      pos[index++] = i;
    }
  }

  if (index >= 8) {
    // RFID is between 6th and 7th pipe
    return data.substring(pos[5] + 1, pos[6]);
  } else {
    return "";
  }
}


void sendToServer(String rfid) {
  if (client.connect(server, 8000)) {
    Serial.println("Connected to server...");

    String postData = "rfid=" + rfid;

    String url = "GET /rfid-esd?rfid=" + rfid + " HTTP/1.1";
    client.println(url);
    client.println("Host: 192.168.1.100");
    client.println("Connection: close");
    client.println();
    
    delay(100);
    while (client.available()) {
      Serial.write(client.read());
    }

    client.stop();
    Serial.println("\nData sent, connection closed");
  } else {
    Serial.println("Failed to connect to server.");
  }
}
